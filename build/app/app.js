var app=angular.module("colorIpsum",["ngAnimate"]);app.controller("mainController",["$scope","coloripsum","$timeout",function(t,n,e){function r(){var t=n.random();return o(t,"Colors for devs"),t}function o(t,n){var e=window.location.pathname.split("/"),r="/"+e[e.length-1],o="/"+t.noHash.main+"-"+t.noHash.complementary+"-"+t.noHash.dark+"-"+t.noHash.light;o===r?history.replaceState({scheme:t},n):history.pushState({scheme:t},n,o)}t.versionColor="#E52B50",t.version="1.7",t.scheme={main:"#000000",complementary:"#000000",dark:"#000000",light:"#000000",noHash:{main:"000000",complementary:"000000",dark:"000000",light:"000000"},luminocity:{main:1,complementary:1,dark:1,light:1},uiColors:{background:"#000000",hex:"#000000",texts:"#000000"}},t.rotate=!1;var a=function(){var t=null,n=window.location.pathname.split("/"),e=n[n.length-1];if(null!==e.match(/^(([a-fA-F0-9]){6})-(([a-fA-F0-9]){6})-(([a-fA-F0-9]){6})-(([a-fA-F0-9]){6})$/gi)){var r=e.split("-");t={main:"#"+r[0],complementary:"#"+r[1],dark:"#"+r[2],light:"#"+r[3],noHash:{main:r[0],complementary:r[1],dark:r[2],light:r[3]}}}return t}();t.scheme=null!==a?function(t){var e=n.generatePaletteFromURL(t);return o(e,"Colors for devs"),e}(a):r(),t.onKeyUp=function(n){32==n.keyCode&&(t.scheme=r())},t.generateRandom=function(n){t.rotate=!0,e(function(){t.rotate=!1},700),t.scheme=r()},t.generatePalette=function(t){return function(t){var e=n.palette(t);return o(e,"Colors for devs"),e}(t)},t.buildInfo=function(){var e={mainHex:t.versionColor};t.versionScheme=function(t){return n.palette(t)}(e),$("body").css("overflow","hidden"),$(".about").fadeIn(200),$(".about-container").show("drop",{direction:"down"},200,function(){$("body").css("overflow","auto")})},t.closeAbout=function(t){"panel about"===t.target.className&&($(".about").css("cursor","auto"),$("body").css("overflow","hidden"),$(".about").fadeOut(200),$(".about-container").hide("drop",{direction:"down"},200,function(){$("body").css("overflow","auto")}))},t.changeCursor=function(t){"panel about"===t.target.className?$(".about").css("cursor","url(assets/images/close.gif), crosshair"):$(".about").css("cursor","auto")},t.selectHexString=function(t){var n,e,r=t.currentTarget.className,o=document.getElementsByClassName(r)[0];window.getSelection?(e=window.getSelection(),(n=document.createRange()).selectNodeContents(o),e.removeAllRanges(),e.addRange(n)):document.body.createTextRange&&((n=document.body.createTextRange()).moveToElementText(o),n.select())};var i=new Clipboard(".color");i.on("success",function(t){var n=$(t.trigger).attr("class").replace(" color","");$("."+n+".hex .hint")[0]||$("."+n+".hex").append('<span class="hint">copied to clipboard</span>').show(function(){$(".hint").fadeOut(1e3,function(){$(this).remove()})})}),i.on("error",function(t){var n=$(t.trigger).attr("class").replace(" color","");$("."+n+".hex .hint")[0]||$("."+n+".hex").append('<span class="hint">ctrl+c to copy</span>').show(function(){$(".hint").fadeOut(1e3,function(){$(this).remove()})})}),window.onpopstate=function(n){null!==n.state&&t.$apply(function(){t.scheme=n.state.scheme})}}]),app.directive("spectrum",function(){return{restrict:"A",link:function(t,n,e){$(n).spectrum(t.$eval(e.spectrum)),$(n).on("reflow.spectrum",function(t){!function(t,n){var e=t.outerWidth(),r=t.outerHeight(),o=n.outerHeight(),a=t[0].ownerDocument,i=a.documentElement.clientWidth+$(a).scrollLeft(),c=n.offset();c.left+=84,c.top+=o,c.left=c.left+e>i&&i>e?Math.abs(c.left-e):c.left,c.top=Math.abs(c.top-42-r/2),t.css({left:c.left,top:c.top})}($(".sp-container"),$(".sp-replacer"))}),$(n).on("change.spectrum",function(n,e){var r={mainHex:e.toHexString()};t.$apply(function(){t.scheme=t.generatePalette(r)})}),t.$watch("scheme",function(t){$(n).spectrum("set",t.main),$(".sp-preview").css({color:t.uiColors.texts}),$(".sp-preview").css({background:t.main})})}}}),app.directive("setFocus",function(){return{restrict:"A",link:function(t,n,e){n[0].focus()}}}),app.service("coloripsum",function(){function t(t){for(var n=(0+(16777215-(t=function(t){return parseInt(t.replace(/^#/,""),16)}(t))).toString(16)).slice(-6);n.length<6;)n="0"+n;return"#"+n}function n(t,n){return e(t)<=.5?function(t,n){var e={};return e.r=Math.round(2*t.r*n.r/255),e.g=Math.round(2*t.g*n.g/255),e.b=Math.round(2*t.b*n.b/255),e.a=n.a,r(e,t)}(t,n):function(t,n){var e={};return e.r=Math.round(255*(1-(1-t.r/255)*(1-(2*n.r/255-1)))),e.g=Math.round(255*(1-(1-t.g/255)*(1-(2*n.g/255-1)))),e.b=Math.round(255*(1-(1-t.b/255)*(1-(2*n.b/255-1)))),e.a=n.a,r(e,t)}(t,n)}function e(t){return(t.r+t.g+t.b)/3/255}function r(t,n){var e={};return e.r=(1-t.a)*n.r+t.a*t.r,e.g=(1-t.a)*n.g+t.a*t.g,e.b=(1-t.a)*n.b+t.a*t.b,function(t,n,e){return"#"+i(t)+i(n)+i(e)}(e.r,e.g,e.b)}function o(t,n){return{r:function(t){return parseInt(a(t).substring(0,2),16)}(t),g:function(t){return parseInt(a(t).substring(2,4),16)}(t),b:function(t){return parseInt(a(t).substring(4,6),16)}(t),a:n}}function a(t){return"#"==t.charAt(0)?t.substring(1,7):t}function i(t){return t=parseInt(t,10),isNaN(t)?"00":(t=Math.max(0,Math.min(t,255)),"0123456789ABCDEF".charAt((t-t%16)/16)+"0123456789ABCDEF".charAt(t%16))}function c(t){var n=Math.random(),e="#EEEEEE";t&&(e="#777777",n=-n);var r=parseInt(e.slice(1),16),o=n<0?0:255,a=n<0?-1*n:n,i=r>>16,c=r>>8&255,u=255&r;return"#"+(16777216+65536*(Math.round((o-i)*a)+i)+256*(Math.round((o-c)*a)+c)+(Math.round((o-u)*a)+u)).toString(16).slice(1)}function u(t,n,e){return r(o(t,n),o(e,1))}function s(t,e,r){var a=o(t,e);return n(o(r,1),a)}function l(t){return e(o(t,1))}function m(t){var n={};return n.background=u(t,.1,"#FFFFFF"),n.hex=u(t,.6,n.background),l(n.background)>.85&&l(n.hex)>.85&&(n.hex=u(n.hex,.9,"#424242")),n.texts=s(t,.2,"#424242"),n}function h(t,n){for(var e in n)n.hasOwnProperty(e)&&(t[e]=n[e]);return t}var p=this,f=function(){return{main:"",complementary:"",dark:"",light:"",noHash:{main:"",complementary:"",dark:"",light:""},luminocity:{main:"",complementary:"",dark:"",light:""},uiColors:{background:"",hex:"",texts:""}}};this.random=function(){var t=function(){for(var t="";t.length<6;)t+=Math.random().toString(16).substr(-6).substr(-1);return"#"+t}(),n=c(!0),e=c(!1);return p.palette({mainHex:t,darkHex:n,lightHex:e})},this.palette=function(n){var e=h({mainHex:"#FFFFFF",darkHex:"#424242",lightHex:"#FAFAFA"},n),r=new f;return r.main=e.mainHex,r.noHash.main=a(r.main).toUpperCase(),r.luminocity.main=l(r.main),r.complementary=t(e.mainHex),r.noHash.complementary=a(r.complementary).toUpperCase(),r.luminocity.complementary=l(r.complementary),r.dark=s(e.mainHex,.2,e.darkHex),r.noHash.dark=a(r.dark).toUpperCase(),r.luminocity.dark=l(r.dark),r.light=s(e.mainHex,.2,e.lightHex),r.noHash.light=a(r.light).toUpperCase(),r.luminocity.light=l(r.light),r.uiColors=h(r.uiColors,m(r.main)),r},this.generatePaletteFromURL=function(t){var n=h(new f,t);return n.luminocity.main=l(n.main),n.luminocity.complementary=l(n.complementary),n.luminocity.dark=l(n.dark),n.luminocity.light=l(n.light),n.uiColors=h(n.uiColors,m(n.main)),n},this.hexToRGBA=function(t,n){return o(t,n)},this.rgbaToHex=function(t,n){return r(t,n)},this.hexOpacity=function(t,n,e){return u(t,n,e)},this.hexBlendOverlay=function(t,n,e){return s(t,n,e)},this.hexLuminocity=function(t){return l(t)}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
